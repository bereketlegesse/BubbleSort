class NumMatrix:
    def __init__(self, matrix):
        self.matrix = matrix
        for row in range(len(self.matrix)):
            for col in range(1, len(self.matrix[0])):
                self.matrix[row][col] += self.matrix[row][col - 1]
        p = 0
        while p < len(self.matrix[0]):
            for row in range(1, len(self.matrix)):
                self.matrix[row][p] += self.matrix[row - 1][p]
            p += 1
    def sumRegion(self, row1, col1, row2, col2):
        result = self.matrix[row2][col2]
        if col1 - 1 >= 0: 
            result -= self.matrix[row2][col1 - 1]
        if row1 - 1 >= 0:
            result -= self.matrix[row1 - 1][col2]
        if row1 - 1 >= 0 and col1 - 1 >= 0:
            result += self.matrix[row1 - 1][col1 - 1]
        return result
    
    
    
#T(n*m) and M(1)
