class Solution:
    def intervalIntersection(self, firstList: List[List[int]], secondList: List[List[int]]) -> List[List[int]]:
        n, m = len(firstList), len(secondList)
        intersections = []
        p1 = 0
        p2 = 0

        while p1 < n and p2 < m:
            overlap = [max(firstList[p1][0], secondList[p2][0]), min(firstList[p1][1], secondList[p2][1])]
            if overlap[0] > overlap[1]:
                if firstList[p1][0] < overlap[0]:
                    p1 += 1
                else:
                    p2 += 1
            else:
                intersections.append(overlap)
                if firstList[p1][1] > secondList[p2][1]:
                    p2 += 1
                else:
                    p1 += 1
                    
        return intersections
