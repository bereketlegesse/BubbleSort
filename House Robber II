class Solution:
    def rob(self, nums: List[int]) -> int:
        n = len(nums)
        memo = dict()
        def backtrack(index, flag):
            if index == n - 1:
                if flag and n > 1:
                    return 0
                return nums[-1]
            if (flag, index) in memo:
                return memo[(flag, index)]

            if index >= n:
                return 0
            
            skip = backtrack(index + 1, flag)
            pick = backtrack(index + 2, flag) + nums[index]
            memo[(flag, index)] = max(skip, pick)
            return max(pick, skip)
        
        ans1 = backtrack(1, 0)
        ans2 = backtrack(0, 1)
        return max(ans1, ans2)
