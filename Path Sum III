# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> int:
        prefixSum = defaultdict(int)
        prefixSum[0] = 1
        count = 0
        def traverse(node,Sum):
            nonlocal count
            if not node:
                return

            Sum += node.val
            count += prefixSum[Sum-targetSum]
            prefixSum[Sum] += 1
            if node.left:
                traverse(node.left,Sum)
            if node.right:
                traverse(node.right,Sum)

            prefixSum[Sum] -= 1
            Sum -= node.val   
            
        traverse(root,0)
        return count


            
