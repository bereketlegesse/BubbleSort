class Solution(object):
    def productExceptSelf(self, nums):
        if nums.count(0)>1:
            return [0]*len(nums)
        pp1 = [nums[0]]       #forward prefix product
        for i in range(1,len(nums)):
            pp1.append(pp1[-1]*nums[i])
        pp2 = [nums[-1]]      #backward prefix product
        for i in range(len(nums)-2,-1,-1):
            pp2.append(pp2[-1]*nums[i])
        result = [pp2[-2]]
        for i in range(1,len(nums)-1):
            x = pp1[i-1] * pp2[len(nums)-i-2]
            result.append(x)
        result.append(pp1[-2])
        return result
            

        
