# Definition for a binary tree node.
# class TreeNode:
#     def init(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        store = []
        def traverse(node,path):
            if not node.left and not node.right:
                path.append(str(node.val))
                fullPath = [i for i in path]
                store.append(fullPath)
                return 
                
            if node.left:
                path.append(str(node.val))
                traverse(node.left, path)
                path.pop()
                
            if node.right:
                if not node.left:
                    path.append(str(node.val))
                traverse(node.right, path)
                path.pop()
            
        traverse(root,[])
        return ["->".join(i) for i in store]
